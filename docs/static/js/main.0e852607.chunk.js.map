{"version":3,"sources":["store/teams/actions.js","store/leagues/actions.js","utils/date.js","components/Schedule/components/UpcomingGames/UpcomingGamesContainer.js","components/Schedule/components/UpcomingGames/UpcomingGames.js","store/games/constants.js","constants.js","store/recommendations/actions.js","store/games/actions.js","components/Schedule/ScheduleContainer.js","components/Schedule/Schedule.js","components/BetRecommendations/BetRecommendations.js","store/pastGames/constants.js","store/pastGames/actions.js","components/BetRecommendations/BetRecommendationsContainer.js","utils/mappers.js","components/MarketLineGraph/MarketLineGraph.js","components/MarketLineGraph/MarketLineGraphContainer.js","components/MarketHistory/MarketHistoryContainer.js","components/MarketHistory/MarketHistory.js","components/Btn/Btn.js","store/teamRankings/actions.js","components/TeamRankings/TeamRankingsContainer.js","components/TeamRankings/TeamRankings.js","App.js","store/games/reducer.js","store/leagues/reducer.js","store/pastGames/reducer.js","store/recommendations/reducer.js","store/teams/reducer.js","store/teamRankings/reducer.js","store/index.js","data/mockAxios.js","index.js","routing/frontend.js"],"names":["fetchTeamsFailure","payload","type","fetchLeaugesFailure","formatDate","date","showYear","moment","format","UpcomingGamesContainer","connect","state","ownProps","games","mapEntities","filter","x","leagueId","allTeams","teams","all","showGame","game","matchup","blueSideTeamId","shortName","toUpperCase","redSideTeamId","className","key","id","style","width","first5Games","slice","remaining","md","map","N_GAMES","fetchRecommendationsFailure","fetchRecommendations","gameIds","pastNGames","dispatch","a","axios","get","transformResponse","data","camelcaseKeys","JSON","parse","deep","message","fetchScheduleFailure","ScheduleContainer","withRouter","allLeagues","leagues","fetchSchedule","location","history","useState","currLeagueId","setCurrLeagueId","useEffect","selectedId","league","search","parseInt","selectedLeagueId","filters","Row","Group","as","Col","sm","controlId","Control","size","onChange","e","target","value","qs","stringify","push","name","leagueOption","DemoTooltip","children","overlay","fetchPastGamesForTeamFailure","BetRecommendationsContainer","recommendations","ids","recommendationsLoaded","isLoaded","setPastNGames","nGames","minEv","setMinEv","prevNumPastGames","setPrevNumPastGames","numPastGames","setNumPastGames","minDiff","setMinDiff","setId","betId","recommendation","rec","side","gameId","redGames","blueGames","team","teamId","opponent","opponentId","market","odds","blueOdds","toFixed","ev","blueEv","teamSuccess","blueSuccess","opponentSuccess","redSuccess","redOdds","redEv","fetchAndUpdateNumPastBets","hasNumPastGamesChanged","Label","disabled","process","onKeyPress","onClick","allRecommdations","sortedRecommendations","sortBy","parseFloat","diff","reverse","table","hover","str","selected","blue","red","title","backgroundColor","oppSuccess","successDiff","length","marketMap","shortMarketToFullName","getData","blueTeamDataset","redTeamDataset","xAxisLabels","i","Math","max","labels","datasets","label","teamName","fill","borderColor","options","maintainAspectRatio","scales","xAxes","scaleLabel","display","labelString","ticks","beginAtZero","suggestedMax","yAxes","MarketLineGraphContainer","pastGames","redId","blueId","gamesFor","getSuccessData","rates","wins","round","height","MarketHistoryContainer","gamesForTeam","results","fetchPastGamesForTeam","success","gameNumber","resultClass","fontWeight","marketResult","Btn","isActive","handleClick","fetchTeamRankingsFailure","TeamRankingsContainer","teamRankings","fetchTeamRankings","rankedTeams","currentMarket","setCurrentMarket","marketBtns","capitalize","ranked","sort","y","teamRank","content","AppContainer","fetchTeams","fetchLeagues","undefined","currentTeamIds","setCurrentTeamIds","demoAlert","variant","href","marketLineGraph","initialState","ajaxBaseState","rootReducer","combineReducers","action","loading","touched","errors","newState","reduce","acc","curr","Set","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","camelcase","mockAxios","url","includes","require","store","createStore","applyMiddleware","thunk","ReactDOM","render","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.0e852607.chunk.js","sourcesContent":["import axios from 'axios'\nimport camelcaseKeys from 'camelcase-keys'\n\nconst FETCH_TEAMS_REQUEST = 'FETCH_TEAMS_REQUEST'\nconst FETCH_TEAMS_SUCCESS = 'FETCH_TEAMS_SUCCESS'\nconst FETCH_TEAMS_FAILURE = 'FETCH_TEAMS_FAILURE'\n\nconst fetchTeamsRequest = () => ({ type: FETCH_TEAMS_REQUEST })\nconst fetchTeamsSuccess = payload => ({ type: FETCH_TEAMS_SUCCESS, payload })\nconst fetchTeamsFailure = payload => ({ type: FETCH_TEAMS_FAILURE, payload })\n\nconst fetchTeams = () => {\n  return async dispatch => {\n    try {\n      dispatch(fetchTeamsRequest())\n      const { data } = await axios.get('/api/teams', {\n        transformResponse: [\n          data => camelcaseKeys(JSON.parse(data), { deep: true })\n        ]\n      })\n\n      dispatch(fetchTeamsSuccess(data))\n    } catch (e) {\n      dispatch(fetchTeamsFailure(e.message))\n    }\n  }\n}\n\nexport {\n  fetchTeams,\n  FETCH_TEAMS_REQUEST,\n  FETCH_TEAMS_SUCCESS,\n  FETCH_TEAMS_FAILURE,\n}\n","import axios from 'axios'\n\nconst FETCH_LEAGUES_REQUEST = 'FETCH_LEAGUES_REQUEST'\nconst FETCH_LEAGUES_SUCCESS = 'FETCH_LEAGUES_SUCCESS'\nconst FETCH_LEAGUES_FAILURE = 'FETCH_LEAGUES_FAILURE'\n\nconst fetchLeaguesRequest = () => ({ type: FETCH_LEAGUES_REQUEST })\nconst fetchLeaguesSuccess = payload => ({ type: FETCH_LEAGUES_SUCCESS, payload })\nconst fetchLeaugesFailure = payload => ({ type: FETCH_LEAGUES_FAILURE, payload })\n\nconst fetchLeagues = () => {\n  return async dispatch => {\n    try {\n      dispatch(fetchLeaguesRequest())\n      const { data } = await axios.get('/api/leagues')\n      dispatch(fetchLeaguesSuccess(data))\n    } catch (e) {\n      dispatch(fetchLeaugesFailure(e.message))\n    }\n  }\n}\n\nexport {\n  fetchLeagues,\n  FETCH_LEAGUES_REQUEST,\n  FETCH_LEAGUES_SUCCESS,\n  FETCH_LEAGUES_FAILURE,\n}\n","import moment from 'moment'\n\n/**\n * format a date in the format Aug 25th '19\n * @param {string} date to format\n * @returns {string} formatted ddate\n */\nconst formatDate = (date, { showYear } = { showYear: true }) => {\n  if (showYear) {\n    return moment(date).format(\"MMM Do 'YY\")\n  }\n\n  return moment(date).format(\"MMM Do\")\n}\n\nexport {\n  formatDate\n}\n","import { connect } from 'react-redux'\nimport { mapEntities } from 'flux-entities'\n\nimport { UpcomingGames } from './UpcomingGames'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    games: mapEntities(state.games).filter(x => x.leagueId === ownProps.leagueId),\n    allTeams: state.teams.all\n  }\n}\n\nconst UpcomingGamesContainer = connect(mapStateToProps)(UpcomingGames)\n\nexport { UpcomingGamesContainer }\n","import React from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { formatDate } from '../../../../utils/date'\n\nfunction UpcomingGames({ games, allTeams }) {\n  const showGame = game => {\n    const matchup = `${allTeams[game.blueSideTeamId].shortName.toUpperCase()} vs ${allTeams[game.redSideTeamId].shortName.toUpperCase()}`\n\n    return (\n      <small \n        className='text-medium'\n        key={game.id}\n      >\n        <div className='d-flex'>\n          <div style={{ width: '120px' }}>\n            {formatDate(game.date)}\n          </div>\n\n          <div>\n            {matchup}\n          </div>\n        </div>\n      </small>\n    )\n  }\n\n  const first5Games = games.slice(0, 5)\n  const remaining = games.slice(5)\n\n  return (\n    <Row>\n      <Col md={6}>\n        {first5Games.map(showGame)}\n      </Col>\n\n      <Col md={6}>\n        {remaining.map(showGame)}\n      </Col>\n    </Row>\n  )\n}\n\nexport { UpcomingGames }\n","export const FETCH_SCHEDULE_REQUEST = 'FETCH_SCHEDULE_REQUEST'\nexport const FETCH_SCHEDULE_SUCCESS = 'FETCH_SCHEDULE_SUCCESS'\nexport const FETCH_SCHEDULE_FAILURE = 'FETCH_SCHEDULE_FAILURE'\n","export const N_GAMES = 18\n","import axios from 'axios'\nimport camelcaseKeys from 'camelcase-keys'\n\nimport { N_GAMES } from '../../constants'\n\nconst FETCH_RECOMMENDATIONS_REQUEST = 'FETCH_RECOMMENDATIONS_REQUEST'\nconst FETCH_RECOMMENDATIONS_SUCCESS = 'FETCH_RECOMMENDATIONS_SUCCESS'\nconst FETCH_RECOMMENDATIONS_FAILURE = 'FETCH_RECOMMENDATIONS_FAILURE'\n\nconst fetchRecommendationsRequest = () => ({ type: FETCH_RECOMMENDATIONS_REQUEST })\nconst fetchRecommendationsSuccess = payload => ({ type: FETCH_RECOMMENDATIONS_SUCCESS, payload })\nconst fetchRecommendationsFailure = payload => ({ type: FETCH_RECOMMENDATIONS_FAILURE, payload })\n\nconst fetchRecommendations = ({ gameIds, pastNGames = N_GAMES }) => {\n  return async dispatch => {\n    try {\n      dispatch(fetchRecommendationsRequest())\n      const { data } = await axios.get(`/api/recommendations?past_n_games=${pastNGames}&game_ids=${gameIds}`, {\n        transformResponse: [\n          (data) => {\n            return camelcaseKeys(JSON.parse(data), { deep: true })\n          }\n        ]\n      })\n\n      dispatch(fetchRecommendationsSuccess(data))\n    } catch (e) {\n      dispatch(fetchRecommendationsFailure(e.message))\n    }\n  }\n}\n\nexport {\n  fetchRecommendations,\n  FETCH_RECOMMENDATIONS_REQUEST,\n  FETCH_RECOMMENDATIONS_SUCCESS,\n  FETCH_RECOMMENDATIONS_FAILURE,\n}\n","import axios from 'axios'\nimport camelcaseKeys from 'camelcase-keys'\n\nimport * as types from './constants'\nimport { fetchRecommendations } from '../recommendations/actions'\n\nconst fetchScheduleRequest = () => ({ type: types.FETCH_SCHEDULE_REQUEST })\nconst fetchScheduleSuccess = payload => ({ type: types.FETCH_SCHEDULE_SUCCESS, payload })\nconst fetchScheduleFailure = payload => ({ type: types.FETCH_SCHEDULE_FAILURE, payload })\n\nconst fetchSchedule = ({ leagueId }) => {\n  return async dispatch => {\n    try {\n      dispatch(fetchScheduleRequest())\n      const { data } = await axios.get(`/api/schedule?league=${leagueId}`, {\n        transformResponse: [\n          (data) => {\n            return camelcaseKeys(JSON.parse(data), { deep: true })\n          }\n        ]\n      })\n\n      dispatch(fetchScheduleSuccess(data))\n      const gameIds = data.map(x => x.id)\n      dispatch(fetchRecommendations({ gameIds }))\n    } catch (e) {\n      dispatch(fetchScheduleFailure(e.message))\n    }\n  }\n}\n\nexport {\n  fetchSchedule,\n}\n","import { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { mapEntities } from 'flux-entities'\n\nimport { Schedule } from './Schedule'\nimport { fetchSchedule } from '../../store/games/actions'\n\nconst mapStateToProps = state => {\n  return {\n    allLeagues: state.leagues.all,\n    leagues: mapEntities(state.leagues)\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchSchedule: leagueId => dispatch(fetchSchedule({ leagueId })),\n  }\n}\n\nconst ScheduleContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(Schedule))\n\nexport {\n  ScheduleContainer\n}\n","import React, { useEffect, useState } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport { stringify, parse } from 'query-string'\n\nimport { UpcomingGamesContainer } from './components/UpcomingGames'\n\nfunction Schedule({ fetchSchedule, allLeagues, leagues, location, history  }) {\n  const [currLeagueId, setCurrLeagueId] = useState()\n\n  const selectedLeagueId = (location) => {\n    const { league } = parse(location.search)\n     \n    if (league) {\n      return parseInt(league, 10)\n    }\n  }\n\n  useEffect(() => {\n    const selectedId = selectedLeagueId(location)\n    if (selectedId && selectedId !== currLeagueId) {\n      fetchSchedule(selectedId)\n      setCurrLeagueId(selectedId)\n    }\n  }, [location, fetchSchedule, currLeagueId, setCurrLeagueId])\n\n  const leagueOption = (league, fetchSchedule) => {\n    return (\n      <option\n        key={league.id}\n        size='sm'\n        value={league.id}\n      >\n        {league.name}\n      </option>\n    )\n  }\n\n  const handleSelectChange = e => {\n    const league = parseInt(e.target.value)\n    if (!league) {\n      return\n    }\n    const qs = stringify({...parse(location.search), league })\n    history.push({ search: `?${qs}` })\n  }\n\n  const filters = (\n    <Form.Row>\n      <Form.Group as={Col} sm='8' className='m-0' />\n\n      <Form.Group as={Col} sm='4' controlId='filter-league' className='m-0'>\n        <Form.Control \n          as='select'\n          size='sm'\n          onChange={handleSelectChange}\n          value={currLeagueId}\n        >\n          <option>\n            Select League\n          </option>\n          {leagues.map(league => leagueOption(league, fetchSchedule))}\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n  )\n\n  const content = () => {\n    if (!currLeagueId) {\n      return (\n        <small>\n          <div className='text-center p-1 pt-2'>\n            Select a league to see the win rate for each team.\n          </div>\n        </small>\n      )\n    }\n\n    return (\n      <hr className='mt-2 mb-2' />\n    )\n  }\n\n  return (\n    <Container>\n      <Card>\n        <h6 className='text-center'>Schedule</h6>\n        {filters}\n        {content()}\n        <UpcomingGamesContainer\n          leagueId={currLeagueId}\n        />\n      </Card>\n    </Container>\n  )\n}\n\nexport { Schedule }\n","import React, { useState, useEffect } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Form from 'react-bootstrap/Form'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport { stringify, parse } from 'query-string'\nimport Col from 'react-bootstrap/Col'\nimport sortBy from 'lodash/sortBy'\n\nimport { formatDate } from '../../utils/date'\nimport { N_GAMES } from '../../constants'\nimport './index.scss'\n\nfunction DemoTooltip({ children }) {\n  if (process.env.REACT_APP_DEMO_MODE === 'true') {\n    return (\n      <OverlayTrigger\n        overlay={\n          <Tooltip id='tooltip-top'>\n            Sign up for more flexibility in analytics and historical data.\n          </Tooltip>\n        }\n      >\n        {children}\n      </OverlayTrigger>\n    )\n  }\n\n  return <>{children}</>\n}\n\nfunction BetRecommendations({\n  recommendations,\n  allTeams,\n  history,\n  location,\n  gameIds,\n  fetchRecommendations,\n  setPastNGames,\n  recommendationsLoaded,\n}) {\n  const [minEv, setMinEv] = useState(1.05)\n  const [prevNumPastGames, setPrevNumPastGames] = useState(N_GAMES)\n  const [numPastGames, setNumPastGames] = useState(N_GAMES)\n  const [minDiff, setMinDiff] = useState(10)\n  const [selectedId, setId] = useState()\n\n\n  useEffect(() => {\n    const { betId } = parse(location.search)\n    if (betId) {\n      setId(betId)\n    }\n  }, [location, selectedId, setId])\n\n  const trStyle = (selected) => {\n    if (!selected) {\n      return {}\n    }\n\n    return { backgroundColor: 'rgba(0,0,0,.075)' }\n  }\n\n  const recommendation = (rec, side) => {\n    if (side === 'blue') {\n      return {\n        id: rec.id,\n        side: 'blue',\n        date: formatDate(rec.date, { showYear: false }),\n        gameId: rec.gameId,\n        redGames: rec.redGames,\n        blueGames: rec.blueGames,\n        team: allTeams[rec.blueSideTeamId].shortName.toUpperCase(),\n        teamId: rec.blueSideTeamId,\n        opponent: allTeams[rec.redSideTeamId].shortName.toUpperCase(),\n        opponentId: rec.redSideTeamId,\n        market: rec.market,\n        odds: rec.blueOdds.toFixed(2),\n        ev: rec.blueEv.toFixed(2),\n        teamSuccess: rec.blueSuccess * 100,\n        opponentSuccess: rec.redSuccess * 100\n      }\n    }\n\n    return {\n      id: rec.id,\n      side: 'red',\n      date: formatDate(rec.date, { showYear: false }),\n      gameId: rec.gameId,\n      redGames: rec.redGames,\n      blueGames: rec.blueGames,\n      team: allTeams[rec.redSideTeamId].shortName.toUpperCase(),\n      teamId: rec.redSideTeamId,\n      opponent: allTeams[rec.blueSideTeamId].shortName.toUpperCase(),\n      opponentId: rec.blueSideTeamId,\n      market: rec.market,\n      odds: rec.redOdds.toFixed(2),\n      ev: rec.redEv.toFixed(2),\n      teamSuccess: rec.redSuccess * 100,\n      opponentSuccess: rec.blueSuccess * 100\n    }\n  }\n\n  const recommendationRow = rec => {\n    const betId = `${rec.id}-${rec.teamId}`\n    const qs = (() => {\n      if (rec.side === 'blue') {\n        return stringify({ \n          ...parse(location.search), market: rec.market, blue: rec.teamId, red: rec.opponentId, betId })\n      }\n      return stringify({ ...parse(location.search), market: rec.market, blue: rec.opponentId, red: rec.teamId, betId })\n    })()\n\n    const successDiff = (teamSuccess, oppSuccess) => {\n      const diff = teamSuccess - oppSuccess\n      if (diff > 0) {\n        return <span className='text-success'>{' '}(+{diff.toFixed(0)}%) </span>\n      }\n\n      return <span className='text-danger'>{' '}({diff.toFixed(0)}%)</span>\n    }\n\n    const uc = str => str.slice(0, 2).toUpperCase() + str.slice(2)\n    const title = `${uc(rec.market)} - ${rec.team} vs ${rec.opponent}` \n\n    return (\n      <tr \n        key={betId}\n        style={trStyle(betId === selectedId)}\n        onClick={() => history.push({ search: qs })}\n      >\n        <td>{rec.date}</td>\n        <td>{title}</td>\n        <td>{rec.odds}</td>\n        <td>{rec.ev}</td>\n        <td>\n          {rec.teamSuccess.toFixed(0)}%\n          {successDiff(rec.teamSuccess, rec.opponentSuccess)}\n        </td>\n        <td>{rec.opponentSuccess.toFixed(0)}%</td>\n      </tr>\n    )\n  }\n\n  const fetchAndUpdateNumPastBets = () => {\n    if (numPastGames === 0) {\n      return\n    }\n\n    setPrevNumPastGames(numPastGames)\n    setPastNGames({ nGames: numPastGames })\n    fetchRecommendations({\n      pastNGames: numPastGames,\n      gameIds\n    })\n  }\n\n  const isDemoMode = process.env.REACT_APP_DEMO_MODE === 'true'\n\n  const hasNumPastGamesChanged = numPastGames !== prevNumPastGames\n  const filters = (\n    <Form.Row>\n      <DemoTooltip>\n        <Form.Group sm='2' as={Col} controlId='filter-min-ev'>\n          <Form.Label>\n            <small>Min EV</small>\n          </Form.Label>\n          <Form.Control \n            disabled={isDemoMode}\n            size='sm'\n            value={minEv ? minEv : ''}\n            onChange={e => setMinEv(e.target.value)}\n          />\n        </Form.Group>\n      </DemoTooltip>\n\n      <DemoTooltip>\n        <Form.Group sm='3' as={Col} controlId='filter-diff'>\n          <Form.Label>\n            <small>Min Diff (%)</small>\n          </Form.Label>\n          <Form.Control \n            size='sm'\n            disabled={isDemoMode}\n            value={minDiff ? minDiff : ''}\n            onChange={e => setMinDiff(e.target.value)}\n          />\n        </Form.Group>\n      </DemoTooltip>\n\n      <DemoTooltip>\n        <Form.Group sm='4' as={Col} controlId='past-games'>\n          <Form.Label>\n            <small>No. Past games</small>\n          </Form.Label>\n          <Form.Control \n            size='sm'\n            disabled={isDemoMode}\n            value={numPastGames ? numPastGames : ''}\n            onChange={e => setNumPastGames(parseInt(e.target.value))}\n            onKeyPress={e => e.key === 'Enter' && fetchAndUpdateNumPastBets()}\n          />\n        </Form.Group>\n      </DemoTooltip>\n\n      <DemoTooltip>\n        <Form.Group sm='3' as={Col} controlId='past-games'>\n          <Form.Label className='text-white'>\n            <small>Submit</small>\n          </Form.Label>\n          <Form.Control  \n            type='button'\n            size='sm'\n            value='Go'\n            disabled={!hasNumPastGamesChanged || isDemoMode}\n            onClick={fetchAndUpdateNumPastBets}\n          />\n        </Form.Group>\n      </DemoTooltip>\n    </Form.Row>\n  )\n\n  const allRecommdations = [\n      ...recommendations.map(x => recommendation(x, 'blue')),\n      ...recommendations.map(x => recommendation(x, 'red'))\n  ]\n\n  const sortedRecommendations = sortBy(allRecommdations, 'ev')\n    .filter(x => {\n      const [ev, diff] = [minEv, minDiff].map(parseFloat)\n      if (!ev || !diff) {\n        return x\n      }\n      return x.ev > ev && (x.teamSuccess - x.opponentSuccess) > diff\n    })\n    .reverse()\n\n  const table = (\n    <Table hover>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Matchup</th>\n          <th>Odds</th>\n          <th>EV</th>\n          <th>Success</th>\n          <th>Opp. Success</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedRecommendations.map(recommendationRow)}\n      </tbody>\n    </Table>\n  )\n\n  const content = () => {\n    if (!sortedRecommendations.length) {\n      if (recommendationsLoaded) {\n        return <div className='text-center p-1'>No recommendations available at the moment.</div>\n      }\n\n      return <div className='text-center p-1'>Select a league to see the win rate for each team.</div>\n    }\n\n    return table\n  }\n\n  return (\n    <Container id='recommendations-table'>\n      <Card>\n        <h6 className='text-center'>Upcoming Market Data</h6>\n        {filters}\n        <small>\n          {content()}\n        </small>\n      </Card>\n    </Container>\n  )\n}\n\nexport {\n  BetRecommendations\n}\n","export const FETCH_PAST_GAMES_FOR_TEAM_REQUEST = 'FETCH_PAST_GAMES_FOR_TEAM_REQUEST'\nexport const FETCH_PAST_GAMES_FOR_TEAM_SUCCESS = 'FETCH_PAST_GAMES_FOR_TEAM_SUCCESS'\nexport const FETCH_PAST_GAMES_FOR_TEAM_FAILURE = 'FETCH_PAST_GAMES_FOR_TEAM_FAILURE'\nexport const SET_PAST_N_GAMES = 'SET_PAST_N_GAMES'\n","import axios from 'axios'\nimport camelcaseKeys from 'camelcase-keys'\n\nimport * as types from './constants'\nimport { N_GAMES } from '../../constants'\n\nconst fetchPastGamesForTeamRequest = () => ({ type: types.FETCH_PAST_GAMES_FOR_TEAM_REQUEST })\nconst fetchPastGamesForTeamSuccess = payload => ({ type: types.FETCH_PAST_GAMES_FOR_TEAM_SUCCESS, payload })\nconst fetchPastGamesForTeamFailure = payload => ({ type: types.FETCH_PAST_GAMES_FOR_TEAM_FAILURE, payload })\nconst setPastNGames = ({ nGames }) => ({ type: types.SET_PAST_N_GAMES, payload: { nGames } })\n\nconst fetchPastGamesForTeam = ({ teamId, nGames = N_GAMES }) => {\n  return async dispatch => {\n    try {\n      dispatch(fetchPastGamesForTeamRequest())\n      const { data } = await axios.get(`/api/previous_game_results?team_id=${teamId}&n=${nGames}`, {\n        transformResponse: [\n          (data) => {\n            return camelcaseKeys(JSON.parse(data), { deep: true })\n          }\n        ]\n      })\n      dispatch(fetchPastGamesForTeamSuccess(data))\n    } catch (e) {\n      dispatch(fetchPastGamesForTeamFailure(e.message))\n    }\n  }\n}\n\nexport {\n  fetchPastGamesForTeam,\n  setPastNGames,\n}\n","import { connect } from 'react-redux'\nimport { mapEntities, isLoaded } from 'flux-entities'\nimport { withRouter } from 'react-router'\n\nimport { BetRecommendations } from './BetRecommendations'\nimport { fetchRecommendations } from '../../store/recommendations/actions'\nimport { setPastNGames } from '../../store/pastGames/actions'\n\nconst mapStateToProps = state => {\n  return {\n    recommendations: mapEntities(state.recommendations),\n    allTeams: state.teams.all,\n    gameIds: state.games.ids,\n    recommendationsLoaded: isLoaded(state.recommendations),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRecommendations: ({ gameIds, pastNGames }) => {\n      dispatch(fetchRecommendations({ gameIds, pastNGames }))\n    },\n\n    setPastNGames: ({ nGames }) => {\n      dispatch(setPastNGames({ nGames }))\n    },\n  }\n}\n\nconst BetRecommendationsContainer = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BetRecommendations)\n)\n\nexport {\n  BetRecommendationsContainer\n}\n","const marketMap = {\n  'fb': 'First Blood',\n  'ft': 'First Turret',\n  'fd': 'First Dragon',\n  'fbaron': 'First Baron'\n}\n\n/**\n * Convert a short market abbreviation to the full name\n * @param {string} market - the market to map, eg 'fb', 'ft', 'fd'\n * @returns {string} the full name of the market in title case\n */\nconst shortMarketToFullName = market => {\n  return marketMap[market]\n}\n\nexport {\n  shortMarketToFullName\n}\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport { Line } from 'react-chartjs-2'\nimport { parse } from 'query-string'\nimport round from 'lodash/round'\nimport sortBy from 'lodash/sortBy'\n\nimport { shortMarketToFullName } from '../../utils/mappers'\n\nconst getData = (blueTeamDataset, redTeamDataset) => {\n  const xAxisLabels = []\n  for (let i = 0; i < Math.max(blueTeamDataset.data.length, redTeamDataset.data.length); i++) {\n    xAxisLabels.push(i + 1);\n  }\n\n  return {\n    labels: xAxisLabels.reverse(),\n    datasets: [\n      {\n        label: blueTeamDataset.teamName,\n        fill: false,\n        borderColor: 'skyblue',\n        backgroundColor: 'skyblue',\n        data: blueTeamDataset.data,\n      },\n      {\n        label: redTeamDataset.teamName,\n        fill: false,\n        borderColor: 'violet',\n        backgroundColor: 'violet',\n        data: redTeamDataset.data,\n      }\n    ]\n  }\n}\n\nconst options = {\n  maintainAspectRatio: false,\n  scales: {\n    xAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: 'Number of Past Games'\n      },\n      ticks: {\n        beginAtZero: true,\n        suggestedMax: 100\n      }\n    }],\n\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: 'Average Success (%)'\n      },\n      ticks: {\n        beginAtZero: true,\n        suggestedMax: 100\n      }\n    }]\n  }\n}\n\nfunction MarketLineGraph({ nGames, redId, blueId, location, pastGames, allTeams }) {\n  const { market } = parse(location.search)\n  const gamesFor = teamId => pastGames.filter(x => x.teamId === teamId)\n  // only get most recent n games\n  const blueGames = sortBy(gamesFor(blueId), ['date', 'gameNumber'])\n    .reverse()\n    .slice(0, nGames)\n    .reverse()\n  const redGames = sortBy(gamesFor(redId), ['date', 'gameNumber'])\n    .reverse()\n    .slice(0, nGames)\n    .reverse()\n\n\n  if (!redId || !blueId) {\n    return <></>\n  }\n\n  const getSuccessData = (teamId, games) => {\n    const rates = []\n    let wins = 0\n    for (let i = 0; i < games.length; i++) {\n      const won = games[i][market]\n      if (won) {\n        wins += 1\n      }\n      rates.push(wins / (rates.length + 1))\n    }\n\n    return rates.map(x => round(x * 100))\n  }\n\n  const blueTeamDataset = { \n    teamName: allTeams[blueId].name,\n    data: getSuccessData(blueId, blueGames)\n  }\n  const redTeamDataset = { \n    teamName: allTeams[redId].name,\n    data: getSuccessData(redId, redGames)\n  }\n\n  return (\n    <Card>\n      <div className='d-flex justify-content-center'>\n        <h6>Success Rate for {shortMarketToFullName(market)}</h6>\n      </div>\n\n      <div style={{ height: '300px' }}>\n        <Line \n          options={options}\n          data={getData(blueTeamDataset, redTeamDataset)} \n        />\n      </div>\n    </Card>\n  )\n}\n\nexport { MarketLineGraph }\n","import { connect } from 'react-redux'\nimport { mapEntities } from 'flux-entities'\nimport { withRouter } from 'react-router'\n\nimport { MarketLineGraph } from './MarketLineGraph'\n\nconst mapStateToProps = state => {\n  const pastGames = mapEntities(state.pastGames)\n  const allTeams = state.teams.all\n\n  return {\n    pastGames,\n    allTeams,\n    nGames: state.pastGames.nGames,\n  }\n}\n\nconst MarketLineGraphContainer = withRouter(connect(mapStateToProps)(MarketLineGraph))\n\nexport {\n  MarketLineGraphContainer\n}\n","import { connect } from 'react-redux'\nimport { mapEntities } from 'flux-entities'\nimport { withRouter } from 'react-router'\nimport sortBy from 'lodash/sortBy'\n\nimport { MarketHistory } from './MarketHistory'\nimport { fetchPastGamesForTeam } from '../../store/pastGames/actions'\n\nconst mapStateToProps = (state, { teamId }) => {\n  const gamesForTeam = mapEntities(state.pastGames).filter(x => x.teamId === teamId)\n\n  return {\n    teamId,\n    results: sortBy(gamesForTeam, ['date', 'gameNumber']).reverse().slice(0, state.pastGames.nGames),\n    allTeams: state.teams.all,\n    nGames: state.pastGames.nGames,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPastGamesForTeam: ({ teamId, nGames }) => dispatch(fetchPastGamesForTeam({ teamId, nGames }))\n  }\n}\n\nconst MarketHistoryContainer = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(MarketHistory)\n)\n\nexport {\n  MarketHistoryContainer\n}\n","import React, { useEffect } from 'react'\nimport { parse } from 'query-string'\nimport Table from 'react-bootstrap/Table'\n\nimport { formatDate } from '../../utils/date'\nimport './index.scss'\n\nfunction MarketHistory({ nGames, teamId, fetchPastGamesForTeam, results, allTeams, location }) {\n  useEffect(() => {\n    if (!teamId) {\n      return\n    }\n\n    fetchPastGamesForTeam({ teamId, nGames })\n  }, [teamId, nGames, fetchPastGamesForTeam])\n\n  const marketResult = success => {\n    const resultClass = success ? 'success' : 'failure'\n    return (\n      <td className={`text-center ${resultClass}`}>\n        <span style={{ fontWeight: success ? 'bold' : '' }}>\n          {success ? '✓' : '✘'}\n        </span>\n      </td>\n    )\n  }\n\n  const row = game => {\n    const { market } = parse(location.search)\n    const opponent = allTeams[game.opponentId].shortName.toUpperCase()\n    const date = formatDate(game.date)\n    const success = game[market]\n\n    const key = `${game.gameId}-${game.gameNumber}-${game.teamId}`\n    return (\n      <tr key={key}>\n        <td>{date}</td>\n        <td>{opponent} ({game.gameNumber})</td>\n        {marketResult(success)}\n      </tr>\n    )\n  }\n\n  if (!teamId) {\n    return <span />\n  }\n\n  return (\n    <div>\n      <div className='text-medium text-center pb-1'>\n        <u>{allTeams[teamId].name}</u>\n      </div>\n      <small>\n        <Table size='sm'>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Opponent</th>\n              <th>Result</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {results.map(row)}\n          </tbody>\n\n        </Table>\n      </small>\n    </div>\n  )\n}\n\nexport {\n  MarketHistory\n}\n","import React from 'react'\n\nimport './index.scss'\n\nfunction Btn({ isActive, handleClick, children, className }) {\n  return (\n    <button \n      className={`${className} simple-btn ${isActive ? 'active': ''}`}\n      onClick={handleClick}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport {\n  Btn\n}\n","import axios from 'axios'\nimport camelcaseKeys from 'camelcase-keys'\n\nconst FETCH_TEAM_RANKINGS_REQUEST = 'FETCH_TEAM_RANKINGS_REQUEST'\nconst FETCH_TEAM_RANKINGS_SUCCESS = 'FETCH_TEAM_RANKINGS_SUCCESS'\nconst FETCH_TEAM_RANKINGS_FAILURE = 'FETCH_TEAM_RANKINGS_FAILURE'\n\nconst fetchTeamRankingsRequest = () => ({ type: FETCH_TEAM_RANKINGS_REQUEST })\nconst fetchTeamRankingsSuccess = payload => ({ type: FETCH_TEAM_RANKINGS_SUCCESS, payload })\nconst fetchTeamRankingsFailure = payload => ({ type: FETCH_TEAM_RANKINGS_FAILURE, payload })\n\nconst fetchTeamRankings = ({ leagueId, pastNGames }) => {\n  return async dispatch => {\n    try {\n      dispatch(fetchTeamRankingsRequest())\n      const { data } = await axios.get(`/api/team_rankings?league_id=${leagueId}&past_n_games=${pastNGames}`, {\n        transformResponse: [\n          data => camelcaseKeys(JSON.parse(data), { deep: true })\n        ]\n      })\n\n      dispatch(fetchTeamRankingsSuccess(data))\n    } catch (e) {\n      dispatch(fetchTeamRankingsFailure(e.message))\n    }\n  }\n}\n\nexport {\n  fetchTeamRankings,\n  FETCH_TEAM_RANKINGS_REQUEST,\n  FETCH_TEAM_RANKINGS_SUCCESS,\n  FETCH_TEAM_RANKINGS_FAILURE,\n}\n","import { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { mapEntities } from 'flux-entities'\n\nimport { TeamRankings } from './TeamRankings'\nimport { fetchTeamRankings } from '../../store/teamRankings/actions'\n\n\nconst mapStateToProps = state => {\n  return {\n    teamRankings: mapEntities(state.teamRankings),\n    nGames: state.pastGames.nGames,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTeamRankings: ({ leagueId, pastNGames }) => {\n      dispatch(fetchTeamRankings({ leagueId, pastNGames }))\n    }\n  }\n}\n\nconst TeamRankingsContainer = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(TeamRankings)\n)\n\nexport {\n  TeamRankingsContainer\n}\n","import React, { useEffect, useState } from 'react'\nimport capitalize from 'lodash/capitalize'\nimport { parse } from 'query-string'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Card from 'react-bootstrap/Card'\n\nimport { Btn } from '../Btn'\n\n\nfunction TeamRankings({ nGames, fetchTeamRankings, rankedTeams, location, teamRankings }) {\n  const [currentMarket, setCurrentMarket] = useState('winrate')\n  const { league } = parse(location.search)\n\n  useEffect(() => {\n    if (!league) {\n      return\n    }\n\n    fetchTeamRankings({ leagueId: league, pastNGames: nGames })\n  }, [league, fetchTeamRankings, nGames])\n\n  const sortRanked = () => \n    teamRankings\n      .sort((x, y) => y[currentMarket] - x[currentMarket])\n      .map(teamRank => {\n        return (\n          <div key={teamRank.id} className='d-flex'>\n            <div style={{ width: '50px' }}>\n              {teamRank.shortName.toUpperCase()}\n            </div>\n            <div>\n              {(teamRank[currentMarket] * 100).toFixed(0)}%\n            </div>\n          </div>\n        )\n      })\n\n\n  const content = () => {\n    if (!teamRankings.length) {\n      return <div className='text-center p-1'>Select a league to see the win rate for each team.</div>\n    }\n\n    const ranked = sortRanked()\n    const first5Games = ranked.slice(0, 5)\n    const remaining = ranked.slice(5)\n\n    return (\n      <Row>\n        <Col sm={6}>\n          {first5Games}\n        </Col>\n        <Col sm={6}>\n          {remaining}\n        </Col>\n      </Row>\n    )\n  }\n\n  const marketBtns = (\n    <small className='d-flex justify-content-center mt-2'>\n      <Btn \n        className='mr-1' \n        isActive={'fb' === currentMarket} \n        handleClick={() => setCurrentMarket('fb')}\n      >\n        FB\n      </Btn>\n\n      <Btn \n        className='mr-1' \n        isActive={'ft' === currentMarket} \n        handleClick={() => setCurrentMarket('ft')}\n      >\n        FT\n      </Btn>\n\n      <Btn \n        className='mr-1' \n        isActive={'fd' === currentMarket} \n        handleClick={() => setCurrentMarket('fd')}\n      >\n        FD\n      </Btn>\n\n      <Btn \n        className='mr-1' \n        isActive={'fbaron' === currentMarket}  \n        handleClick={() => setCurrentMarket('fbaron')}\n      >\n        FBaron\n      </Btn>\n\n      <Btn \n        className='mr-1' \n        isActive={'winrate' === currentMarket}  \n        handleClick={() => setCurrentMarket('winrate')}\n      >\n        Winrate\n      </Btn>\n    </small>\n  )\n\n  return (\n    <Container>\n      <Card>\n        <h6 className='text-center'>{capitalize(currentMarket)} (last {nGames} games)</h6>\n        <small className='d-flex justify-content-center'>\n          {content()}\n        </small>\n        {marketBtns}\n      </Card>\n    </Container>\n  )\n}\n\nexport {\n  TeamRankings\n}\n","import React, { useEffect, useState } from 'react'\nimport { parse } from 'query-string'\nimport { isLoaded } from 'flux-entities'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Alert from 'react-bootstrap/Alert'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\n\nimport { fetchTeams } from './store/teams/actions'\nimport { fetchLeagues } from './store/leagues/actions'\nimport { ScheduleContainer } from './components/Schedule'\nimport { BetRecommendationsContainer } from './components/BetRecommendations'\nimport { MarketLineGraphContainer } from './components/MarketLineGraph'\nimport { MarketHistoryContainer } from './components/MarketHistory'\nimport { TeamRankingsContainer } from './components/TeamRankings'\n\n\nfunction App({ fetchLeagues, fetchTeams, location, isLoaded, teams }) {\n  const [currentTeamIds, setCurrentTeamIds] = useState({ blueId: undefined, redId: undefined })\n\n  useEffect(() => {\n    fetchTeams()\n  }, [fetchTeams])\n\n  useEffect(() => {\n    fetchLeagues()\n  }, [fetchLeagues])\n\n\n  useEffect(() => {\n    const { red, blue } = parse(location.search)\n    if (red && blue) {\n      const blueId = parseInt(blue, 10)\n      const redId = parseInt(red, 10)\n      setCurrentTeamIds({ blueId, redId })\n    }\n\n  }, [location, setCurrentTeamIds])\n\n\n  const { betId } = parse(location.search)\n\n  const betRecommendationStats = () => {\n    if (!betId) {\n      return (\n        <Card className='h-100 d-flex align-items-center justify-content-center'>\n          <small style={{ width: '450px' }}>\n            No bet recommendation selected. \n            Select a leage and bet recommendation to view the \n            past data relevant to the recommendation.\n          </small>\n        </Card>\n      )\n    }\n\n    return (\n      <Card>\n        <h6 className='text-center'>Past Games</h6>\n        <Row>\n          <Col>\n            <MarketHistoryContainer\n              teamId={currentTeamIds.blueId}\n            />\n          </Col>\n          <Col>\n            <MarketHistoryContainer \n              teamId={currentTeamIds.redId}\n            />\n          </Col>\n        </Row>\n      </Card>\n    )\n  }\n\n  const marketLineGraph = () => {\n    if (!betId) {\n      return\n    }\n\n    return (\n      <Row>\n        <Col>\n          <MarketLineGraphContainer \n            redId={currentTeamIds.redId}\n            blueId={currentTeamIds.blueId}\n          />\n        </Col>\n      </Row>\n    )\n  }\n\n\n  const demoAlert = process.env.REACT_APP_DEMO_MODE === 'true' && (\n    <Alert variant='warning'>\n      This is a demo of <a href=\"https://loltrack.app\">LolTrack</a>. \n      Sign up <a href='#'>here </a>for full access for Spring Split 2019.\n    </Alert>\n  )\n\n  const content = () => {\n    if (!isLoaded) {\n      return <span>Loading...</span>\n    }\n\n    return (\n      <Container className='p-1'>\n        {demoAlert}\n        <Row>\n          <Col>\n            {marketLineGraph()}\n\n            {betRecommendationStats()}\n          </Col>\n\n          <Col>\n            <Row>\n              <ScheduleContainer />\n            </Row>\n\n            <Row>\n              <TeamRankingsContainer />\n            </Row>\n\n            <Row>\n              <BetRecommendationsContainer />\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n\n  return content()\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoaded: isLoaded(state.teams) && isLoaded(state.leagues),\n    teams: state.teams\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTeams: () => dispatch(fetchTeams()),\n    fetchLeagues: () => dispatch(fetchLeagues()),\n  }\n}\n\nconst AppContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n\nexport default AppContainer;\n","import { ajaxBaseState } from 'flux-entities'\n\nimport * as types from './constants'\n\nconst initialState = ajaxBaseState()\n\nconst gamesReducer = (state = initialState, action) => {\n  if (action.type === types.FETCH_SCHEDULE_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n      touched: true\n    }\n  }\n\n  if (action.type === types.FETCH_SCHEDULE_FAILURE) {\n    return {\n      ...state,\n      loading: false,\n      errors: [action.payload]\n    }\n  }\n\n  if (action.type === types.FETCH_SCHEDULE_SUCCESS) {\n    const newState = action.payload.reduce((acc, curr) => {\n      return {\n        ids: [ ...acc.ids, curr.id ],\n        all: { ...acc.all, [curr.id]: curr }\n      }\n    }, { ids: [], all: {} })\n\n    return {\n      ...state,\n      ...newState,\n      loading: false,\n    }\n  }\n\n  return state\n}\n\nexport {\n  gamesReducer\n}\n","import { ajaxBaseState } from 'flux-entities'\nimport {\n  FETCH_LEAGUES_REQUEST,\n  FETCH_LEAGUES_SUCCESS,\n  FETCH_LEAGUES_FAILURE,\n} from './actions'\n\nconst initialState = ajaxBaseState()\n\nconst leagues = (state = initialState, action) => {\n  if (action.type === FETCH_LEAGUES_REQUEST) {\n    return {\n      ...state,\n      touched: true,\n      loading: true,\n    }\n  }\n\n  if (action.type === FETCH_LEAGUES_SUCCESS) {\n    const newState = action.payload.reduce((acc, curr) => {\n      return {\n        ids: [ ...acc.ids, curr.id ],\n        all: { ...acc.all, [curr.id]: curr }\n      }\n    }, { ids: [], all: {} })\n\n    return {\n      ...state,\n      ...newState,\n      loading: false,\n    }\n  }\n\n  if (action.type === FETCH_LEAGUES_FAILURE) {\n    return {\n      ...state,\n      loading: false,\n      errors: [action.payload]\n    }\n  }\n\n  return state\n}\n\nexport {\n  leagues\n}\n","import { ajaxBaseState } from 'flux-entities'\n\nimport * as types from './constants'\nimport { N_GAMES } from '../../constants'\n\nconst initialState = {\n  ...ajaxBaseState(),\n  nGames: N_GAMES,\n}\n\nconst pastGames = (state = initialState, action) => {\n  if (action.type === types.SET_PAST_N_GAMES) {\n    return {\n      ...state,\n      nGames: action.payload.nGames,\n    }\n  }\n\n  if (action.type === types.FETCH_PAST_GAMES_FOR_TEAM_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n      touched: true\n    }\n  }\n\n  if (action.type === types.FETCH_PAST_GAMES_FOR_TEAM_FAILURE) {\n    return {\n      ...state,\n      loading: false,\n      errors: [action.payload]\n    }\n  }\n\n  if (action.type === types.FETCH_PAST_GAMES_FOR_TEAM_SUCCESS) {\n    // since two teams will share a past game, the key will not be unique\n    // so, we save the key as teamId | gameId\n    // eg say C9 is id = 3 and TL is id 4, and we have a game C9 vs TL with gameId 10\n    // we save the game twice, once with key 3|10 and once with 4|10\n    const newState = action.payload.reduce((acc, curr) => {\n      const id = `${curr.teamId}|${curr.gameId}` \n      return {\n        ids: [...new Set([ ...acc.ids, id])],\n        all: { ...acc.all, [id]: {...curr, id} }\n      }\n    }, { ids: [...state.ids], all: {...state.all} })\n\n    return {\n      ...state,\n      ...newState,\n      loading: false,\n    }\n  }\n\n  return state\n}\n\nexport {\n  pastGames\n}\n","import { ajaxBaseState } from 'flux-entities'\n\nimport {\n  FETCH_RECOMMENDATIONS_REQUEST,\n  FETCH_RECOMMENDATIONS_SUCCESS,\n  FETCH_RECOMMENDATIONS_FAILURE,\n} from './actions'\n\nconst initialState = ajaxBaseState()\n\nconst recommendations = (state = initialState, action) => {\n  if (action.type === FETCH_RECOMMENDATIONS_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n      touched: true\n    }\n  }\n\n  if (action.type === FETCH_RECOMMENDATIONS_FAILURE) {\n    return {\n      ...state,\n      loading: false,\n      errors: [action.payload]\n    }\n  }\n\n  if (action.type === FETCH_RECOMMENDATIONS_SUCCESS) {\n    const newState = action.payload.reduce((acc, curr) => {\n      return {\n        ids: [ ...acc.ids, curr.id ],\n        all: { ...acc.all, [curr.id]: curr }\n      }\n    }, { ids: [], all: {} })\n\n    return {\n      ...state,\n      ...newState,\n      loading: false,\n    }\n  }\n\n  return state\n}\n\nexport {\n  recommendations\n}\n","import { ajaxBaseState } from 'flux-entities'\n\nimport {\n  FETCH_TEAMS_REQUEST,\n  FETCH_TEAMS_SUCCESS,\n  FETCH_TEAMS_FAILURE,\n} from './actions'\n\nconst initialState = ajaxBaseState()\n\nconst teams = (state = initialState, action) => {\n  if (action.type === FETCH_TEAMS_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n      touched: true\n    }\n  }\n\n  if (action.type === FETCH_TEAMS_FAILURE) {\n    return {\n      ...state,\n      loading: false,\n      errors: [action.payload]\n    }\n  }\n\n  if (action.type === FETCH_TEAMS_SUCCESS) {\n    const newState = action.payload.reduce((acc, curr) => {\n      return {\n        ids: [ ...acc.ids, curr.id ],\n        all: { ...acc.all, [curr.id]: curr }\n      }\n    }, { ids: [], all: {} })\n\n    return {\n      ...state,\n      ...newState,\n      loading: false,\n    }\n  }\n\n  return state\n}\n\nexport {\n  teams\n}\n","import { ajaxBaseState } from 'flux-entities'\n\nimport * as actions from './actions'\n\n\nconst initialState = ajaxBaseState()\n\nconst teamRankings = (state = initialState, action) => {\n  if (action.type === actions.FETCH_TEAM_RANKINGS_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n      touched: true,\n    }\n  }\n\n  if (action.type === actions.FETCH_TEAM_RANKINGS_FAILURE) {\n    return {\n      ...state,\n      loading: false,\n      errors: [action.payload],\n    }\n  }\n\n  if (action.type === actions.FETCH_TEAM_RANKINGS_SUCCESS) {\n    const newState = action.payload.reduce((acc, curr) => {\n      return {\n        ids: [ ...acc.ids, curr.id ],\n        all: { ...acc.all, [curr.id]: curr }\n      }\n    }, { ids: [], all: {} })\n\n    return {\n      ...state,\n      ...newState,\n      loading: false,\n    }\n  }\n\n  return state\n}\n\nexport {\n  teamRankings\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { gamesReducer } from './games/reducer'\nimport { leagues } from './leagues/reducer'\nimport { pastGames } from './pastGames/reducer'\nimport { recommendations } from './recommendations/reducer'\nimport { teams } from './teams/reducer'\nimport { teamRankings } from './teamRankings/reducer'\n\n\nconst rootReducer = combineReducers({\n  games: gamesReducer,\n  leagues,\n  pastGames,\n  recommendations,\n  teams,\n  teamRankings,\n})\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst configureStore = () => {\n  return createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(thunk)\n    )\n  )\n}\n\nexport {\n  configureStore\n}\n","import camelcaseKeys from 'camelcase-keys'\n\nconst camelcase = data => camelcaseKeys(data, { deep: true })\n\nconst mockAxios = {\n  get: url => {\n    if (url.includes('teams')) {\n      return {\n        data: camelcase(require('./teams.json'))\n      }\n    }\n\n    if (url.includes('leagues')) {\n      return {\n        data: camelcase(require('./leagues.json'))\n      }\n    }\n\n    if (url.includes('recommendations')) {\n      return {\n        data: camelcase(require('./recommendations.json'))\n      }\n    }\n\n    if (url.includes('team_rankings')) {\n      return {\n        data: camelcase(require('./team_rankings.json'))\n      }\n    }\n\n    if (url.includes('schedule')) {\n      return {\n        data: camelcase(require('./schedule.json'))\n      }\n    }\n\n    if (url.includes('team_id=118')) {\n      return {\n        data: camelcase(require('./team_id=118.json'))\n      }\n    }\n\n    if (url.includes('team_id=119')) {\n      return {\n        data: camelcase(require('./team_id=119.json'))\n      }\n    }\n\n    if (url.includes('team_id=121')) {\n      return {\n        data: camelcase(require('./team_id=121.json'))\n      }\n    }\n\n    if (url.includes('team_id=122')) {\n      return {\n        data: camelcase(require('./team_id=122.json'))\n      }\n    }\n  }\n}\n\nexport {\n  mockAxios\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport axios from 'axios'\n\nimport AppContainer from './App'\nimport { configureStore } from './store'\nimport { ROOT_URL } from './routing/frontend'\nimport { mockAxios } from './data/mockAxios'\nimport './index.css'\n\nconst store = configureStore()\n\nwindow.store = store\n\nif (process.env.REACT_APP_DEMO_MODE === 'true') {\n  axios.get = mockAxios.get\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route\n          path={ROOT_URL}\n          component={AppContainer}\n        />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root'));\n","export const ROOT_URL = '/'\n"],"sourceRoot":""}